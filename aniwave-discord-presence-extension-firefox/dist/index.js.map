{
  "version": 3,
  "sources": ["../src/utils/aniwave.js", "../src/utils/kickassanime.js", "../src/handleBackendUpdate.js"],
  "sourcesContent": ["export function getAniwaveAnimeName() {\r\n    const classNames = \"title d-title\";\r\n    const elements = document.getElementsByClassName(classNames);\r\n    const animeName = elements[0]?.innerText ?? \"Anime\";\r\n    return animeName;\r\n}\r\n\r\nexport function getAniwaveDuration() {\r\n    try {\r\n        const duration = document.getElementsByClassName(\"meta\")[2].children[1].innerText.split(\" \")[1];\r\n        const parsed = parseInt(duration);\r\n        if (!parsed) throw new Error(\"Duration not found\");\r\n        return parsed;\r\n    } catch {\r\n        //typical anime episode duration\r\n        return 23;\r\n    }\r\n}\r\n\r\nexport function getAniwaveThumbnail() {\r\n    try {\r\n        const classNames = \"poster\";\r\n        const poster = document.getElementsByClassName(classNames)[0]?.children[0]?.firstChild;\r\n        const animePoster = poster.src ?? \"aniwave_image\";\r\n        return animePoster;\r\n    } catch {\r\n        return \"aniwave_image\";\r\n    }\r\n}\r\n\r\nexport function getAniwaveEpisodeNumber() {\r\n    try {\r\n        //url structure: aniwave.to/watch/anime-name<hash>/ep-<episode-number>\r\n        return url.split(\"/\").at(-1).split(\"-\").at(-1);\r\n    } catch {\r\n        return \"\";\r\n    }\r\n}", "export function getKickassAnimeTitle() {\r\n    const titleElement = Array.from(document.querySelectorAll(\".text-h6\")).filter(title => title.nodeName === \"H1\");\r\n    const title = titleElement[0]?.innerText ?? \"Anime\";\r\n    console.log(`Got title: ${title}`);\r\n    return title;\r\n}\r\n\r\nexport function getKickassAnimeEpisodeNumber() {\r\n    const descriptionElements =\r\n        Array.from(document.querySelectorAll(\".text-overline\"))\r\n            .filter(element => element.innerText.includes(\"EPISODE\"));\r\n\r\n    if (descriptionElements.length === 0) return \"Movie\"\r\n    const episodeNumber = descriptionElements[0]?.innerText.split(\" \")[1] ?? \"0\";\r\n\r\n    console.log(`Got episode number: ${episodeNumber}`);\r\n    return episodeNumber;\r\n}\r\n\r\nexport function getKickassAnimeImageURL() {\r\n    const images = document.querySelectorAll(\".v-image__image.v-image__image--cover\");\r\n    const titleImage = Array.from(images).at(-1);\r\n    const titleImageInlineCSSText = titleImage?.style?.cssText\r\n    const URL = titleImageInlineCSSText?.split('\"')?.at(1);\r\n\r\n    if (!URL) return \"aniwave_image\";\r\n    console.log(`Image URL: ${URL}`);\r\n\r\n    return URL;\r\n\r\n}\r\n\r\nexport function getKickassAnimeDuration() {\r\n    return 23;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "import { getAniwaveAnimeName, getAniwaveThumbnail, getAniwaveEpisodeNumber, getAniwaveDuration } from \"./utils/aniwave\";\r\nimport { getKickassAnimeTitle, getKickassAnimeImageURL, getKickassAnimeEpisodeNumber, getKickassAnimeDuration } from \"./utils/kickassanime\";\r\n\r\n\r\nconst LOCAL_PORT = 42069;\r\nconst LOCAL_URL = \"http://localhost\";\r\nconst LOCAL_ENDPOINT = \"/animeData\";\r\n\r\nconst PAGE_LOAD_DELAY_MS = 10 * 1000;\r\nconst DISCORD_RPC_INTERVAL_MS = 1000;\r\nconst TITLE_KEY = \"title\";\r\nconst IMAGE_URL_KEY = \"imageURL\";\r\nconst EPISODE_NUMBER_KEY = \"episodeNumber\";\r\nconst TIMEOUT_IN_MINUTES_KEY = \"timeoutInMinutes\";\r\n\r\nconst SUPPORTED_WEBSITES = [\"aniwave.to/watch\", \"kickassanime.mx\"];\r\n\r\n\r\n//cache url to check for changes\r\nlet url = window.location.href;\r\n\r\n\r\nconst metadataQueryFunctionsMap = {\r\n    \"aniwave\": {\r\n        [TITLE_KEY]: getAniwaveAnimeName,\r\n        [IMAGE_URL_KEY]: getAniwaveThumbnail,\r\n        [EPISODE_NUMBER_KEY]: getAniwaveEpisodeNumber,\r\n        [TIMEOUT_IN_MINUTES_KEY]: getAniwaveDuration,\r\n    },\r\n    \"kickassanime\": {\r\n        [TITLE_KEY]: getKickassAnimeTitle,\r\n        [IMAGE_URL_KEY]: getKickassAnimeImageURL,\r\n        [EPISODE_NUMBER_KEY]: getKickassAnimeEpisodeNumber,\r\n        [TIMEOUT_IN_MINUTES_KEY]: getKickassAnimeDuration,\r\n    }\r\n}\r\n\r\nasync function queryAnimeMetadata(website) {\r\n    //wait for page to load, eg for the image to hydrate\r\n    await new Promise(r => setTimeout(r, PAGE_LOAD_DELAY_MS));\r\n\r\n    const metadataQueryFuncs = metadataQueryFunctionsMap[website];\r\n    const metadata = {\r\n        [TITLE_KEY]: metadataQueryFuncs[TITLE_KEY](),\r\n        [IMAGE_URL_KEY]: metadataQueryFuncs[IMAGE_URL_KEY](),\r\n        \"options\": {\r\n            [EPISODE_NUMBER_KEY]: metadataQueryFuncs[EPISODE_NUMBER_KEY](),\r\n            [TIMEOUT_IN_MINUTES_KEY]: metadataQueryFuncs[TIMEOUT_IN_MINUTES_KEY](),\r\n            \"buttonURL\": url,\r\n            \"buttonLabel\": \"Watch along!\",\r\n        }\r\n    };\r\n\r\n    console.log({ metadata })\r\n    return metadata;\r\n}\r\n\r\n\r\nasync function postMetadata(animeDataJSON) {\r\n    const res = await fetch(`${LOCAL_URL}:${LOCAL_PORT}${LOCAL_ENDPOINT}`, {\r\n        method: \"POST\",\r\n        body: animeDataJSON,\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        }\r\n    });\r\n\r\n    if(!res.ok) throw new Error(`Response not ok, status: ${res.status}`);\r\n};\r\n\r\n\r\nfunction isValidPayload(metadataPayload) {\r\n    return metadataPayload.title && metadataPayload.imageURL;\r\n}\r\n\r\n\r\nasync function postAnimeMetadataToBackend(websiteString) {\r\n    const animeDataObj = await queryAnimeMetadata(websiteString);\r\n\r\n    if (!isValidPayload(animeDataObj)) {\r\n        console.log(\"Invalid payload, not sending to backend\");\r\n        return;\r\n    }\r\n\r\n    const animeDataJSON = JSON.stringify(animeDataObj);\r\n    console.log(`Got: ${animeDataJSON}`);\r\n    await postMetadata(animeDataJSON);\r\n};\r\n\r\n\r\nasync function postMetadataOnURLChange(websiteString) {\r\n    const urlChanged = url !== window.location.href;\r\n    const isWantedSite = [\"https://aniwave.to/watch\", \"https://kickassanime.mx/\"].some(site => window.location.href.includes(site));\r\n    if (urlChanged && isWantedSite) {\r\n        url = window.location.href;\r\n        await postAnimeMetadataToBackend(websiteString);\r\n    }\r\n};\r\n\r\n\r\n(async () => {\r\n    SUPPORTED_WEBSITES.forEach(async (siteURL) => {\r\n        if (url.includes(siteURL)) {\r\n            const website = siteURL.split(\".\")[0];\r\n            //on initial page load\r\n            await postAnimeMetadataToBackend(website);\r\n\r\n            //check if episode changed\r\n            setInterval(async () => await postMetadataOnURLChange(website), DISCORD_RPC_INTERVAL_MS);\r\n        }\r\n    });\r\n})()"],
  "mappings": "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",
  "names": ["getAniwaveAnimeName", "_a", "getAniwaveDuration", "duration", "parsed", "getAniwaveThumbnail", "_b", "getAniwaveEpisodeNumber", "getKickassAnimeTitle", "_a", "title", "getKickassAnimeEpisodeNumber", "descriptionElements", "element", "episodeNumber", "getKickassAnimeImageURL", "_b", "images", "titleImage", "titleImageInlineCSSText", "URL", "getKickassAnimeDuration", "LOCAL_PORT", "LOCAL_URL", "LOCAL_ENDPOINT", "PAGE_LOAD_DELAY_MS", "DISCORD_RPC_INTERVAL_MS", "TITLE_KEY", "IMAGE_URL_KEY", "EPISODE_NUMBER_KEY", "TIMEOUT_IN_MINUTES_KEY", "SUPPORTED_WEBSITES", "url", "metadataQueryFunctionsMap", "getAniwaveAnimeName", "getAniwaveThumbnail", "getAniwaveEpisodeNumber", "getAniwaveDuration", "getKickassAnimeTitle", "getKickassAnimeImageURL", "getKickassAnimeEpisodeNumber", "getKickassAnimeDuration", "queryAnimeMetadata", "website", "r", "metadataQueryFuncs", "metadata", "postMetadata", "animeDataJSON", "res", "isValidPayload", "metadataPayload", "postAnimeMetadataToBackend", "websiteString", "animeDataObj", "postMetadataOnURLChange", "urlChanged", "isWantedSite", "site", "siteURL"]
}
